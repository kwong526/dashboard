version: "3.3"
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"
    volumes:
      - /home/kafka/zookeeper/data:/opt/zookeeper-3.4.13/data
    hostname: zookeeper
  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    expose:
      - "9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: acit3855-kafkalab.westus3.cloudapp.azure.com # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://acit3855-kafkalab.westus3.cloudapp.azure.com:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/kafka/kafka:/kafka/kafka-logs
    depends_on:
      - "zookeeper"
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: "kafka"
      # So you don't have to use root, but you can if you like
      MYSQL_USER: "clinton"
      # You can use whatever password you like
      MYSQL_PASSWORD: "clintonwong!"
      # Password for root access
      MYSQL_ROOT_PASSWORD: "root"
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - "3306:3306"
    expose:
      # Opens port 3306 on the container
      - "3306"
      # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql
  receiver:
    build: ../receiver
    image: receiver:latest
    container_name: receiver
    ports:
      - "8080:8080"
    depends_on:
      - "kafka"

  storage:
    build: ../storage
    image: storage:latest
    container_name: storage
    ports:
      - "8090:8090"
    depends_on:
      - "kafka"
      - "db"

  processing:
    build: ../processing
    image: processing:latest
    container_name: processing
    ports:
      - "8100:8100"
    network_mode: "host"
    depends_on:
      - "storage"

  audit:
    build: ../audit
    image: audit:latest
    container_name: audit
    ports:
      - "8110:8110"
    depends_on:
      - "kafka"
  
  dashboard:
    build: ../dashboard-ui
    image: dashboard:latest
    container_name: dashboard
    ports:
      - "3000:3000"
    expose:
      - "3000"
    network_mode: "host"
    depends_on:
      - "processing"
      - "audit"

# Names our volume
volumes:
  my-db:
  kafka:
